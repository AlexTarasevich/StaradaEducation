//  Объекты: копирование

let a = 1;
// здесь происходит копирование значения переменной "а" в переменную "b"
let b = a; 
console.log(a, b) // 1 1 
// поменяем только одну из переменных 
a = 0; 
console.log(a, b) // 0 1 - изменится только a 

// Объекты не копируют значение, они только сохраняют ссылку на “копируемый” объект (на его значение). 
// При изменении свойства по ссылке значение меняется в оригинальном объекте, получается так 

const phoneBook = {
	"Alex": "+7817928379127",
	"Pavel": "+789123791273",
}
// "скопировали" объект 
const copyPhoneBook = phoneBook; 
console.log(copyPhoneBook);
// добавили Майка в копию книги 
copyPhoneBook['Mike'] = "+71923120803912" 
// но он добавился и в оригинальный объект
console.log(phoneBook) // { "Alex": "+7817928379127", "Pavel": "+789123791273", "Mike": "71923120803912" }


// СРАВНЕНИЯ
// По причинам выше сравнение двух объектов так же невозможно, потому что будут сравниваться ссылки, а не сами значения. З
// начит даже два пустых объекта не будут равны 

let c = {}; // первый пустой объект
let d = {}; // второй пустой объект

console.log( c === d ); // false - разные объекты 

// Это кажется логичным если знать что мы сравниваем ссылки, а не сами значения, ведь ссылка переменной А не равна ссылке в Б. 
// При этом можно сравнить значения свойств объектов - в таком случае для сравнения будет взято именно значение

const userA = { name: 'artt', role: 'admin' }
const userB = { name: 'paul', role: 'admin' }

console.log(userA.role === userB.role) // true - сравниваются две строки 'admin'

// КОПИРОВАНИЕ 

// Метод для копирования объекта и его данных - structuredClone()

const original = { name: "Strada" };
// копируем
const copy = structuredClone(original);

console.log(copy !== original); // разные объекты, разные ссылки 
console.log(copy.name); // "Strada" - данные скопированы 
// поменяем имя в оригинальном объекте 
original.name = "Страда";
// убедимся что в копированном объекте ничего не изменилось 
console.log(copy.name); // "Strada" - данные не изменились  